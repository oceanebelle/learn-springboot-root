spring.application.name=learn-kafka
app.topic=mytopic.t
app.consumer.concurrency=8

#spring kakfa settings
spring.kafka.boostrapServers=localhost:9092
spring.kafka.producer.acks=all
#spring.kafka.producer.batchSize=0
spring.kafka.producer.clientId=myapp

spring.kakfa.consumer.clientId=myapp
spring.kakfa.consumer.groupId=myapp-group2
# N.B. always disable auto commit
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.properties.auto.commit.interval.ms=100
spring.kafka.consumer.auto-offset-reset=earliest
# N.B. when using batch, ensure max processing time of all records is less than poll interval
# e.g. record processing = 1s with below config will result in REBALANCE after the 3rd record is processed.
spring.kafka.consumer.properties.max.poll.interval.ms=100000
spring.kafka.consumer.max-poll-records=10
spring.kafka.consumer.properties.commit.log.level=INFO


# Tracing
spring.sleuth.enabled=true
spring.sleuth.tracer.mode=BRAVE
spring.sleuth.sampler.probability=1
spring.zipkin.enabled=false

# Logging
logging.pattern.level = %p a=${spring.application.name} [%X{traceId},%X{spanId}]




